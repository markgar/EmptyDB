CREATE VIEW queryinsights.long_running_queries AS (SELECT  MAX(median_elapsed_time) AS median_total_elapsed_time_ms, MAX(last_run_elapsed_time) AS last_run_total_elapsed_time_ms, MAX(t.TIMESTAMP) AS last_run_start_time,  MAX(last_run_statement_id) AS last_dist_statement_id,  MAX(last_run_session_id) AS last_run_session_id, COUNT(*) AS number_of_runs, MAX(last_run_statement) AS last_run_command FROM(SELECT  query_hash,    GREATEST(0,DATEDIFF(MILLISECOND, t1.TIMESTAMP, t2.TIMESTAMP)) AS duration,    t1.TIMESTAMP,    FIRST_VALUE(t1.distributed_statement_id) OVER (PARTITION BY t1.query_hash ORDER BY t1.TIMESTAMP DESC) AS last_run_statement_id, FIRST_VALUE(GREATEST(0,DATEDIFF(MILLISECOND, t1.TIMESTAMP, t2.TIMESTAMP))) OVER (PARTITION BY t1.query_hash ORDER BY t1.TIMESTAMP DESC) AS last_run_elapsed_time,    FIRST_VALUE(t1.session_id) OVER (PARTITION BY query_hash ORDER BY t1.TIMESTAMP DESC) AS last_run_session_id,    FIRST_VALUE(t1.statement) OVER (PARTITION BY query_hash ORDER BY t1.TIMESTAMP DESC) AS last_run_statement, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY GREATEST(0,DATEDIFF(MILLISECOND, t1.TIMESTAMP, t2.TIMESTAMP))) OVER (PARTITION BY query_hash) AS median_elapsed_time FROM ( SELECT CASE WHEN obfuscated_query_text_hash NOT LIKE '0x%[^A-Za-z1-9]' AND obfuscated_query_text_hash != '0x' THEN obfuscated_query_text_hash ELSE query_text_hash END AS query_hash,    session_id, TIMESTAMP, statement, distributed_statement_id, database_name, batch_id FROM queryinsights.fabric_query_starting WHERE queryinsights.fabric_query_starting.TIMESTAMP >= CURRENT_TIMESTAMP - 30) AS t1 JOIN     queryinsights.fabric_query_completed AS t2 ON t1.distributed_statement_id = t2.distributed_statement_id     AND t1.database_name = t2.database_name     AND t1.batch_id = t2.batch_id WHERE t2.TIMESTAMP >= CURRENT_TIMESTAMP - 30 AND distributed_request_id IS NOT NULL AND distributed_request_id <> CAST(0x0 AS UNIQUEIDENTIFIER)) AS t GROUP BY query_hash)
GO

